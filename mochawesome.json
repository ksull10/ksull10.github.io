{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-16T13:17:26.638Z",
    "end": "2022-06-16T13:17:53.135Z",
    "duration": 26497,
    "testsRegistered": 10,
    "passPercent": 10,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 9,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "aa2b665f-bb29-4a69-8bbd-9e555bbc17fc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1399,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const testName = this.currentTest.fullTitle()\nawait driverFactory.build(testName)\nthis.driver = driverFactory.driver",
          "err": {},
          "uuid": "dd39dc66-b97f-4ee6-9fb5-caa42345b5b7",
          "parentUUID": "aa2b665f-bb29-4a69-8bbd-9e555bbc17fc",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "if ((this.currentTest.state=='failed') || (this.currentTest.state=='passed')) {\n  let imageFileName = this.currentTest.title+ '.jpeg';\n  this.driver.takeScreenshot().then(\n    function(image){\n      require('fs').writeFileSync('./screenshots/'+ imageFileName, image, 'base64')\n    }\n  )\n  addContext(this, 'Screen shot where the test case ended')\n  addContext(this,'../screenshots/'+ imageFileName)\n}",
          "err": {},
          "uuid": "847439a3-2ec7-428c-9e4c-08213a881275",
          "parentUUID": "aa2b665f-bb29-4a69-8bbd-9e555bbc17fc",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 190,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const testPassed = this.currentTest.state === 'passed'\nawait driverFactory.quit(testPassed)",
          "err": {},
          "uuid": "82e1b6b1-c1f8-4264-8ea0-ebb7f586a4e1",
          "parentUUID": "aa2b665f-bb29-4a69-8bbd-9e555bbc17fc",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "8cfc37c4-285b-4048-9be8-034942f4f71f",
          "title": "Admin Authentication",
          "fullFile": "/Users/ksullivan/StoreFront_e2e/squadlocker-testing/test/AdminAuth.js",
          "file": "/test/AdminAuth.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Admin Authentication \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "login = new LoginPage(this.driver)\nawait login.load()",
              "err": {},
              "uuid": "e470fe2d-c45e-431f-a809-9ba8dc74e7c5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login successfully With valid credentials user is brought to their dash baord @prod",
              "fullTitle": "Admin Authentication Login successfully With valid credentials user is brought to their dash baord @prod",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'Test1234')\nassert((await login.successMessagePresent()), ' Navigated to Dashboard')",
              "err": {},
              "uuid": "72e9f4f8-e2df-409f-8fd5-62fb41ada1a8",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Login With invalid credentials returns an error message @prod",
              "fullTitle": "Admin Authentication Login With invalid credentials returns an error message @prod",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'SuperSecretPassword!')\nassert((await login.failureMessagePresent()), 'Failure message displayed')",
              "err": {},
              "uuid": "d7caf4ca-a24a-4edc-ad3d-3b89e4ca4065",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Successfully log out  the user is brought to dash board login @prod",
              "fullTitle": "Admin Authentication Successfully log out  the user is brought to dash board login @prod",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'Test1234')\nawait login.logout()\nassert((await login.loginToDashBoardPresent()), 'User is brought to dash baord logoin page')",
              "err": {},
              "uuid": "64188c5d-c7b2-4caf-86d0-3d0b89a7efb5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "72e9f4f8-e2df-409f-8fd5-62fb41ada1a8",
            "d7caf4ca-a24a-4edc-ad3d-3b89e4ca4065",
            "64188c5d-c7b2-4caf-86d0-3d0b89a7efb5"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 80000
        },
        {
          "uuid": "c199588f-fbfc-419d-9866-0bc4592eb42c",
          "title": "Build a Store as an existing user.",
          "fullFile": "/Users/ksullivan/StoreFront_e2e/squadlocker-testing/test/Build_Store.js",
          "file": "/test/Build_Store.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Build a Store as an existing user. \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeBuilder = new StoreBuilder(this.driver)\nlogin = new LoginPage(this.driver)\nawait login.load();",
              "err": {},
              "uuid": "0c4d4245-c6b4-4df4-9c63-7e695e15e024",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Choose a prodct for your store @prod",
              "fullTitle": "Build a Store as an existing user. Choose a prodct for your store @prod",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'Test1234') \nawait storeBuilder.navToStorebuilder();\nawait storeBuilder.choseProduct();\nassert((await storeBuilder.verifyEmptyAddGearMsgPresent()), ' Navigated to the Add Gear Page')",
              "err": {},
              "uuid": "b14868be-f817-4423-9c49-fbb3df9c495a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Add Gear to the Store @prod",
              "fullTitle": "Build a Store as an existing user. Add Gear to the Store @prod",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'Test1234') \nawait storeBuilder.navToStorebuilder();\nawait storeBuilder.choseProduct();\nawait storeBuilder.addGrearToStore();\nassert((await storeBuilder.verifyGearCountMsgPresent()), 'MY GEAR STORE (1) apperars')",
              "err": {},
              "uuid": "a0d169a4-bc71-413d-b509-88f4c65c67aa",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Add an existing logo to a Store @prod",
              "fullTitle": "Build a Store as an existing user. Add an existing logo to a Store @prod",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'Test1234') \nawait storeBuilder.navToStorebuilder();\nawait storeBuilder.choseProduct();\nawait storeBuilder.addGrearToStore();\nawait storeBuilder.addLogoToStore();\nassert((await storeBuilder.verifySaveStoreModalPresent()), 'Navigated to the Save Store Modal')",
              "err": {},
              "uuid": "b9967c03-d2ab-47d6-88f9-2c4ad896555d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Saved a Store @prod",
              "fullTitle": "Build a Store as an existing user. Saved a Store @prod",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'Test1234') \nawait storeBuilder.navToStorebuilder();\nawait storeBuilder.choseProduct();\nawait storeBuilder.addGrearToStore();\nawait storeBuilder.addLogoToStore();\nawait storeBuilder.saveStore();\nassert((await storeBuilder.verifyStoreName()), 'Store is created')",
              "err": {},
              "uuid": "aaab74b9-8920-4631-aefa-6f33b5e134e5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b14868be-f817-4423-9c49-fbb3df9c495a",
            "a0d169a4-bc71-413d-b509-88f4c65c67aa",
            "b9967c03-d2ab-47d6-88f9-2c4ad896555d",
            "aaab74b9-8920-4631-aefa-6f33b5e134e5"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 80000
        },
        {
          "uuid": "26058b92-918c-4321-889c-ccf3d91b4b04",
          "title": "Edit and exsiting store.",
          "fullFile": "/Users/ksullivan/StoreFront_e2e/squadlocker-testing/test/Edit_Store.js",
          "file": "/test/Edit_Store.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Edit and exsiting store. \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeBuilder = new StoreBuilder(this.driver)\nlogin = new LoginPage(this.driver)\neditStore = new EditStorePage(this.driver)\nawait login.load();",
              "err": {},
              "uuid": "c615484e-77b1-48d9-823f-40ad1a6e341c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update Store Name @prod",
              "fullTitle": "Edit and exsiting store. Update Store Name @prod",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'Test1234') \nawait  editStore.updateStoreName()\nassert((await editStore.verifyStoreName()), 'The Store name was updated')",
              "err": {},
              "uuid": "739425d6-f25a-40d5-94cd-5052c0e69c10",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "739425d6-f25a-40d5-94cd-5052c0e69c10"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 80000
        },
        {
          "uuid": "c7b53ab3-7abb-4ffd-b4e9-896c6b15c15d",
          "title": "Purchase Item",
          "fullFile": "/Users/ksullivan/StoreFront_e2e/squadlocker-testing/test/Purchase_Item.js",
          "file": "/test/Purchase_Item.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Purchase Item\"",
              "fullTitle": "Purchase Item \"before each\" hook in \"Purchase Item\"",
              "timedOut": false,
              "duration": 2748,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "login = new LoginPage(this.driver)\nshoppingCart = new ShoppingCartPage(this.driver)\ncheckOut = new CheckOutPage(this.driver)\nawait login.load();",
              "err": {},
              "uuid": "06b41a60-0382-4129-ba4c-3e1a2f8d534c",
              "parentUUID": "c7b53ab3-7abb-4ffd-b4e9-896c6b15c15d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add Item to Shopping Cart @prod",
              "fullTitle": "Purchase Item Add Item to Shopping Cart @prod",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'Test1234') \nawait shoppingCart.addItemToCart()\n       assert((await shoppingCart.verifyCartCount()), 'The Shopping cart Count was udated')",
              "err": {},
              "uuid": "d16e1b58-1070-4689-810f-d093481381c8",
              "parentUUID": "c7b53ab3-7abb-4ffd-b4e9-896c6b15c15d",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "CheckOut Item in Shopping Cart",
              "fullTitle": "Purchase Item CheckOut Item in Shopping Cart",
              "timedOut": false,
              "duration": 22156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"This is the order Number\",\n  \"Screen shot where the test case ended\",\n  \"../screenshots/CheckOut Item in Shopping Cart.jpeg\"\n]",
              "code": "await login.authenticate('ksullivan@squadlocker.com', 'Test1234') \nawait  shoppingCart.addItemToCart()\nawait shoppingCart.navToCheckOut()\nawait checkOut.checkOutCart()\naddContext(this, 'This is the order Number');\nassert((await checkOut.verifyOrderConfPageDispays()), 'Verify Order Confirm Page displays')",
              "err": {},
              "uuid": "bf30a413-b26f-46ed-9b24-7b693f81f0bd",
              "parentUUID": "c7b53ab3-7abb-4ffd-b4e9-896c6b15c15d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf30a413-b26f-46ed-9b24-7b693f81f0bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [
            "d16e1b58-1070-4689-810f-d093481381c8"
          ],
          "duration": 22156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 80000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 80000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}